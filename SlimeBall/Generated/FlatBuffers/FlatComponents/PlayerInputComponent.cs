// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatComponents
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PlayerInputComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PlayerInputComponent GetRootAsPlayerInputComponent(ByteBuffer _bb) { return GetRootAsPlayerInputComponent(_bb, new PlayerInputComponent()); }
  public static PlayerInputComponent GetRootAsPlayerInputComponent(ByteBuffer _bb, PlayerInputComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerInputComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MoveInputX { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MoveInputY { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool JumpPressed { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<FlatComponents.PlayerInputComponent> CreatePlayerInputComponent(FlatBufferBuilder builder,
      int moveInputX = 0,
      int moveInputY = 0,
      bool jumpPressed = false) {
    builder.StartTable(3);
    PlayerInputComponent.AddMoveInputY(builder, moveInputY);
    PlayerInputComponent.AddMoveInputX(builder, moveInputX);
    PlayerInputComponent.AddJumpPressed(builder, jumpPressed);
    return PlayerInputComponent.EndPlayerInputComponent(builder);
  }

  public static void StartPlayerInputComponent(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddMoveInputX(FlatBufferBuilder builder, int moveInputX) { builder.AddInt(0, moveInputX, 0); }
  public static void AddMoveInputY(FlatBufferBuilder builder, int moveInputY) { builder.AddInt(1, moveInputY, 0); }
  public static void AddJumpPressed(FlatBufferBuilder builder, bool jumpPressed) { builder.AddBool(2, jumpPressed, false); }
  public static Offset<FlatComponents.PlayerInputComponent> EndPlayerInputComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatComponents.PlayerInputComponent>(o);
  }
};


}
