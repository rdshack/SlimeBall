// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatComponents
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FrameSyncData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static FrameSyncData GetRootAsFrameSyncData(ByteBuffer _bb) { return GetRootAsFrameSyncData(_bb, new FrameSyncData()); }
  public static FrameSyncData GetRootAsFrameSyncData(ByteBuffer _bb, FrameSyncData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FrameSyncData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int FrameNum { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FullStateHash { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FlatComponents.ComponentSet? InputState(int j) { int o = __p.__offset(8); return o != 0 ? (FlatComponents.ComponentSet?)(new FlatComponents.ComponentSet()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int InputStateLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<FlatComponents.FrameSyncData> CreateFrameSyncData(FlatBufferBuilder builder,
      int frameNum = 0,
      int fullStateHash = 0,
      VectorOffset inputStateOffset = default(VectorOffset)) {
    builder.StartTable(3);
    FrameSyncData.AddInputState(builder, inputStateOffset);
    FrameSyncData.AddFullStateHash(builder, fullStateHash);
    FrameSyncData.AddFrameNum(builder, frameNum);
    return FrameSyncData.EndFrameSyncData(builder);
  }

  public static void StartFrameSyncData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddFrameNum(FlatBufferBuilder builder, int frameNum) { builder.AddInt(0, frameNum, 0); }
  public static void AddFullStateHash(FlatBufferBuilder builder, int fullStateHash) { builder.AddInt(1, fullStateHash, 0); }
  public static void AddInputState(FlatBufferBuilder builder, VectorOffset inputStateOffset) { builder.AddOffset(2, inputStateOffset.Value, 0); }
  public static VectorOffset CreateInputStateVector(FlatBufferBuilder builder, Offset<FlatComponents.ComponentSet>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInputStateVectorBlock(FlatBufferBuilder builder, Offset<FlatComponents.ComponentSet>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartInputStateVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatComponents.FrameSyncData> EndFrameSyncData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatComponents.FrameSyncData>(o);
  }
};


}
