// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatComponents
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct VelocityComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static VelocityComponent GetRootAsVelocityComponent(ByteBuffer _bb) { return GetRootAsVelocityComponent(_bb, new VelocityComponent()); }
  public static VelocityComponent GetRootAsVelocityComponent(ByteBuffer _bb, VelocityComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public VelocityComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int VeloX { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int VeloY { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxSpeed { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatComponents.VelocityComponent> CreateVelocityComponent(FlatBufferBuilder builder,
      int veloX = 0,
      int veloY = 0,
      int maxSpeed = 0) {
    builder.StartTable(3);
    VelocityComponent.AddMaxSpeed(builder, maxSpeed);
    VelocityComponent.AddVeloY(builder, veloY);
    VelocityComponent.AddVeloX(builder, veloX);
    return VelocityComponent.EndVelocityComponent(builder);
  }

  public static void StartVelocityComponent(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddVeloX(FlatBufferBuilder builder, int veloX) { builder.AddInt(0, veloX, 0); }
  public static void AddVeloY(FlatBufferBuilder builder, int veloY) { builder.AddInt(1, veloY, 0); }
  public static void AddMaxSpeed(FlatBufferBuilder builder, int maxSpeed) { builder.AddInt(2, maxSpeed, 0); }
  public static Offset<FlatComponents.VelocityComponent> EndVelocityComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatComponents.VelocityComponent>(o);
  }
};


}
