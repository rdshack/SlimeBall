// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatComponents
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PawnSpawnEventComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PawnSpawnEventComponent GetRootAsPawnSpawnEventComponent(ByteBuffer _bb) { return GetRootAsPawnSpawnEventComponent(_bb, new PawnSpawnEventComponent()); }
  public static PawnSpawnEventComponent GetRootAsPawnSpawnEventComponent(ByteBuffer _bb, PawnSpawnEventComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PawnSpawnEventComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong NewPawn { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public int PlayerId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FlatComponents.PawnSpawnEventComponent> CreatePawnSpawnEventComponent(FlatBufferBuilder builder,
      ulong newPawn = 0,
      int playerId = 0) {
    builder.StartTable(2);
    PawnSpawnEventComponent.AddNewPawn(builder, newPawn);
    PawnSpawnEventComponent.AddPlayerId(builder, playerId);
    return PawnSpawnEventComponent.EndPawnSpawnEventComponent(builder);
  }

  public static void StartPawnSpawnEventComponent(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddNewPawn(FlatBufferBuilder builder, ulong newPawn) { builder.AddUlong(0, newPawn, 0); }
  public static void AddPlayerId(FlatBufferBuilder builder, int playerId) { builder.AddInt(1, playerId, 0); }
  public static Offset<FlatComponents.PawnSpawnEventComponent> EndPawnSpawnEventComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatComponents.PawnSpawnEventComponent>(o);
  }
};


}
